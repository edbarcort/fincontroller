{"version":3,"sources":["components/table.js","utils/api.js","pages/bulkUpload.js","components/login.js","components/registry.js","App.js","serviceWorker.js","components/config.js","index.js"],"names":["TablePage","_ref","finData","forEach","element","_id","react_default","a","createElement","mdbreact_esm","active","color","size","type","id","value","data","columns","label","field","sort","rows","striped","hover","tbodyColor","theadColor","theadTextWhite","api","getFin","axios","get","getData2","saveData","put","bulkUpload","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getInfo","API","then","res","setState","catch","err","console","log","onChangeHandler","event","file","target","files","loaded","onClickHandler","FormData","append","state","post","statusText","uploaded","className","onSubmit","onFormSubmit","onClick","inputs","name","onChange","htmlFor","containerClassName","Component","Login","email","password","login","preventDefault","firebase","auth","signInWithEmailAndPassword","user","history","push","handleChange","md","icon","react_router_dom","to","Registry","registry","createUserWithEmailAndPassword","App","react_router","path","component","BulkUpload","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bfe1ad1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBDataTable, MDBInput, MDBBtn } from 'mdbreact';\r\nimport \"../styles/login.css\";\r\nexport function TablePage({ finData }) {\r\n  finData.forEach(element => {\r\n    element._id = <MDBBtn active color=\"primary\" size='sm' type=\"button\" id={element._id} value={element._id}>Add Comment</MDBBtn>;\r\n  });\r\n  const data = {\r\n    columns: [\r\n      {\r\n        // 'label': <MDBInput label=\" \" type=\"checkbox\" id=\"checkbox5\" />,\r\n        // 'field': 'check',\r\n        // 'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Business Unit',\r\n        'field': 'sbu',\r\n        'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Region',\r\n        'field': 'region',\r\n        'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Period',\r\n        'field': 'period',\r\n        'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Previous Year',\r\n        'field': 'py',\r\n        'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Plan',\r\n        'field': 'pl',\r\n        'sort': 'asc'\r\n      },\r\n      {\r\n        'label': 'Rolling Forecast',\r\n        'field': 'rfc',\r\n        'sort': 'asc'\r\n      }\r\n    ],\r\n    // rows: [\r\n    //   {\r\n    //     'check': <MDBInput label=\" \" type=\"checkbox\" id=\"checkbox6\" />,\r\n    //     'sbu': 'Adhesives',\r\n    //     'region': 'Americas',\r\n    //     'period': '2019-01',\r\n    //     'py': '3%',\r\n    //     'pl': '-2%',\r\n    //     'rfc': '1%'\r\n    //   }\r\n    //]\r\n    rows: finData\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <MDBDataTable\r\n      striped\r\n      hover\r\n      tbodyColor='white'\r\n      theadColor=\"dark\"\r\n      theadTextWhite\r\n      data={data}\r\n    />\r\n  );\r\n\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    getFin: function() {\r\n        return axios.get(\"/api/data\");\r\n    },\r\n    getData2: function(id) {\r\n        return axios.get(\"api/data/\" + id)\r\n    },\r\n    saveData: function(id) {\r\n        return axios.put(\"api/data/\" + id)\r\n    }\r\n};","import React from 'react';\nimport '../App.css';\nimport { Component } from \"react\";\nimport { MDBInputGroup, MDBBtn, MDBProgress } from \"mdbreact\";\nimport axios from \"axios\";\nimport { TablePage } from \"../components/table\"\nimport API from \"../utils/api.js\"\n\n\nclass bulkUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      uploaded: false,\n      finData: []\n    }\n  }\n\n  componentDidMount() {\n    this.getInfo();\n  }\n\n  getInfo = () => {\n    API.getFin()\n      .then(res => this.setState({\n        finData: res.data\n      }))\n      .catch(err => console.log(err));\n  };\n\n  onChangeHandler = event => {\n    this.setState({\n      file: event.target.files[0],\n      loaded: 0,\n    })\n  }\n\n  onClickHandler = () => {\n    const data = new FormData()\n    data.append('file', this.state.file)\n    axios.post(\"http://localhost:3000/upload\", data, { // receive two parameter endpoint url ,form data \n\n    })\n      .then(res => { // then print response status\n        console.log(res.statusText)\n        console.log(res)\n        if (res.statusText === \"OK\") {\n          this.setState({\n            uploaded: true,\n\n          })\n        }\n        this.getInfo();\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n\n        <div className='container bg-light' onSubmit={this.onFormSubmit}>\n          <h1> Bulk upload </h1> {this.state.uploaded ? <h1 className=\"text-success\">Completed</h1> : \" \"}\n\n          <MDBInputGroup\n            append={\n              <MDBBtn\n                active color=\"primary\"\n                className=\"m-0 px-3 py-2 z-depth-0\"\n                onClick={this.onClickHandler}\n              >\n                Upload\n            </MDBBtn>\n            }\n            inputs={\n              <div className=\"custom-file\">\n                <input\n                  type=\"file\"\n                  className=\"custom-file-input\"\n                  id=\"inputGroupFile01\"\n                  name=\"file\"\n                  onChange={this.onChangeHandler}\n                />\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                  {\n                    this.state.file ? <div>{this.state.file.name}</div> : \" No file seleced\"\n                  }\n                </label>\n              </div>\n            }\n            containerClassName=\"mb-3\"\n          />\n        </div>\n        <div className='container bg-light'>\n          <h1> Financial Reports</h1>\n          <TablePage finData={this.state.finData}></TablePage>\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\n\nexport default bulkUpload;\n","import React, { Component } from \"react\";\nimport {MDBContainer,MDBRow,MDBCol,MDBCard,MDBCardBody,MDBModalFooter,MDBIcon, MDBCardHeader,MDBBtn} from \"mdbreact\";\nimport \"../styles/login.css\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport firebase from 'firebase';\nimport {Link} from 'react-router-dom';\n\n// const Login = () => \nclass Login extends Component {\n    state = {\n        email:'',\n        password: '',\n        login: ''\n    };\n    onSubmit = (event) => {\n        event.preventDefault();\n        const user = firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.password)\n        .then((user) => {\n            this.props.history.push('/upload');\n\n        })\n        .catch((err) => {\n            console.log(err)\n        });\n    };    \n    handleChange = (event) => {\n        const field = event.target.name; \n        const value = event.target.value;\n        this.state[field] = value\n        console.log(this.state)\n        console.log('F' +field, 'V' + value);\n    }\n    render() {\n  return (\n   <div className=\"container center\">\n    <MDBContainer>\n      <MDBRow className=\"loginCard\">\n      <MDBCol md=\"3\"> </MDBCol>\n        <MDBCol md=\"6\">\n          <MDBCard>\n            <MDBCardBody>\n              <MDBCardHeader className=\"form-header peach-gradient rounded\">\n                {/* TITULO DE LOGIN */}\n                <h3 className=\"my-3\">\n                  <MDBIcon icon=\"lock\" /> Login:\n                </h3> \n              </MDBCardHeader>\n              {/* LEYENDA DE YOUR EMAIL */}\n              <form onSubmit={this.onSubmit}>\n              <label\n                htmlFor=\"defaultFormEmailEx\"\n                className=\"grey-text font-weight-light\">\n                Your email\n              </label>\n              <input onChange={this.handleChange}\n                type=\"email\"\n                name = \"email\"\n                id=\"defaultFormEmailEx\"\n                className=\"form-control\"\n              />\n            {/* LEYENDA DE YOUR PASSWORD */}\n              <label\n                htmlFor=\"defaultFormPasswordEx\"\n                className=\"grey-text font-weight-light\"\n              >\n                Your password\n              </label>\n              <input onChange={this.handleChange}\n                type=\"password\"\n                name = \"password\"\n                id=\"defaultFormPasswordEx\"\n                className=\"form-control\"\n              />\n\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\">\n                  Login\n                </MDBBtn>\n              </div>\n              </form>\n\n              <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <p>Not a member? <Link to = '/registry' >Request Access</Link></p>\n                  <p>Forgot Password?</p>\n                </div>         \n              </MDBModalFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol md=\"3\"> </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  );\n};\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport {MDBContainer,MDBRow,MDBCol,MDBCard,MDBCardBody,MDBModalFooter,MDBIcon, MDBCardHeader,MDBBtn} from \"mdbreact\";\nimport \"../styles/login.css\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport firebase from 'firebase';\nimport {Link} from 'react-router-dom';\n\n// const Login = () => \nclass Registry extends Component {\n    state = {\n        email:'',\n        password: '',\n        registry: ''\n    };\n    onSubmit = (event) => {\n        event.preventDefault();\n        const user = firebase.auth().createUserWithEmailAndPassword(this.state.email,this.state.password)\n        .then((user) => {\n            this.props.history.push('/login');\n\n        })\n        .catch((err) => {\n            console.log(err)\n        });\n    };    \n    handleChange = (event) => {\n        const field = event.target.name; \n        const value = event.target.value;\n        this.state[field] = value\n        console.log(this.state)\n        console.log('F' +field, 'V' + value);\n    }\n    render() {\n  return (\n   <div className=\"container center\">\n    <MDBContainer>\n      <MDBRow className=\"loginCard\">\n      <MDBCol md=\"3\"> </MDBCol>\n        <MDBCol md=\"6\">\n          <MDBCard>\n            <MDBCardBody>\n              <MDBCardHeader className=\"form-header peach-gradient rounded\">\n                {/* TITULO DE REGISTRY */}\n                <h3 className=\"my-3\">\n                  <MDBIcon icon=\"users\" /> Registry:\n                </h3> \n              </MDBCardHeader>\n              {/* LEYENDA DE YOUR EMAIL */}\n              <form onSubmit={this.onSubmit}>\n              <label\n                htmlFor=\"defaultFormEmailEx\"\n                className=\"grey-text font-weight-light\">\n                Enter new email\n              </label>\n              <input onChange={this.handleChange}\n                type=\"email\"\n                name = \"email\"\n                id=\"defaultFormEmailEx\"\n                className=\"form-control\"\n              />\n            {/* LEYENDA DE YOUR PASSWORD */}\n              <label\n                htmlFor=\"defaultFormPasswordEx\"\n                className=\"grey-text font-weight-light\"\n              >\n                Set Password\n              </label>\n              <input onChange={this.handleChange}\n                type=\"password\"\n                name = \"password\"\n                id=\"defaultFormPasswordEx\"\n                className=\"form-control\"\n              />\n\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"deep-orange\" className=\"mb-3\" type=\"submit\">\n                  Submit\n                </MDBBtn>\n              </div>\n              </form>\n\n              <MDBModalFooter>\n                <div className=\"font-weight-light\">\n                  <p><Link to = '/login' >Login</Link></p>\n                  <p></p>\n                </div>         \n              </MDBModalFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol md=\"3\"> </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n    </div>\n  );\n};\n}\n\nexport default Registry;","import React from 'react';\nimport './App.css';\nimport {Component} from \"react\";\nimport axios from \"axios\";\nimport BulkUpload from './pages/bulkUpload';\nimport Login from \"./components/login\";\nimport Registry from \"./components/registry\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component{\n  constructor (props)   {\n    super(props);\n    this.state = {\n      file: null\n    }\n  }\n  \n\nonChangeHandler=event=>{\n  this.setState({\n    file: event.target.files[0],\n    loaded:0,\n  })\n}\n\nonClickHandler = () => {\n    const data = new FormData()\n    data.append('file', this.state.file)\n  axios.post(\"http://localhost:3000/upload\", data, { // receive two parameter endpoint url ,form data \n\n})\n    .then(res => { // then print response status\n      console.log(res.statusText)\n    })\n}\n\nrender() {\nreturn (\n//     <div onSubmit={this.onFormSubmit}>\n//       <h1> Bulk upload </h1>\n//       <input type = \"file\" name = \"file\" onChange={this.onChangeHandler} />\n//       <button onClick={\n//         this.onClickHandler\n//       }>\n// Upload file\n//       </button>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/login' component={Login} />\n            <Route path='/upload' component={BulkUpload} />\n            <Route path='/registry' component={Registry} />\n            <Route path='/' component={Login} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n\n      // </div>\n \n  )  \n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var firebaseConfig = {\r\n    apiKey: \"AIzaSyApdnSDycxsGfsYRfHk3O3yWohMy-zdU-w\",\r\n    authDomain: \"financialcontroller-ba501.firebaseapp.com\",\r\n    databaseURL: \"https://financialcontroller-ba501.firebaseio.com\",\r\n    projectId: \"financialcontroller-ba501\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"731189241427\",\r\n    appId: \"1:731189241427:web:4fad07763b438746\"\r\n};\r\n\r\n// Initialize Firebase\r\n//   firebase.initializeApp(firebaseConfig);\r\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\nimport firebaseConfig from './components/config';\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}